require 'sinatra'
require 'sinatra/reloader'

this_dir = File.expand_path(File.dirname(__FILE__))
autogenerated_pb_dir = File.join(this_dir, 'autogenerated_pb')
$LOAD_PATH.unshift(autogenerated_pb_dir) unless $LOAD_PATH.include?(autogenerated_pb_dir)

require 'grpc'
require 'products_services_pb'

configure do
  enable :reloader
  set :strict_paths, false
end

get '/' do
  content_type :json
  {
    app: 'GRPC studies - Apps Ruby - Client'
  }.to_json
end

get '/api/products' do
  content_type :json
  stub = ProductService::Stub.new(ENV['GRPC_SERVER'], :this_channel_is_insecure)
  products = stub.list_all(Empty.new)
  products.to_json
end

get '/api/products/:id' do
  content_type :json

  id = params['id'].to_i

  stub = ProductService::Stub.new(ENV['GRPC_SERVER'], :this_channel_is_insecure)

  error = nil
  data = nil

  data = begin
           stub.get(ProductRequestId.new(id: id))
         rescue GRPC::BadStatus => e
           error = "GRPC error #{e.code} | Details #{e.details}"
           nil
         end

  {
    app: 'GRPC studies - Apps Ruby - Client - GET /api/products/:id (GRPC Get)',
    error: error,
    data: data
  }.to_json
end
